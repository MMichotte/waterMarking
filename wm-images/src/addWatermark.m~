function status = addWatermark(Path_imageSource,Path_watermark)

clc; close all;

source=imread(Path_imageSource);

figure
subplot(1,2,1)
imshow(source); % displaying objective image
title('Objective image');


% traitement de l_image Ã  tatouer
wm_image=imread(Path_watermark); 
temp2=imresize(wm_image,[1000, 1000]); % redimensionnement de l_image pour mener Ã  bien le tatouage

% vérification de la taille des l'image
sourceSize = size(initial(:,:,1));
wmSize = size(wm_image);

if (sourceSize ~= wmSize)
    status = 'Erreur: les images doivent avoir la même taille!';
    return;
end

% conversion de l_image en Binaire 
if (size(temp2,3)==3)
    binWm_image=imbinarize(rgb2gray(temp2));  
else
    binWm_image=imbinarize(temp2); 
end


subplot(1,2,2);
imshow(binWm_image) % displaying image to be hidden
title('image to be hidden');
 
r=double(source-mod(source,2)); % suppression des LSB de l_image de base 
finalImage=uint8(r+binWm_image); % remplacement des LSB de l_image de base par les bits de l_image Ã  tatouer 

figure
imshow(finalImage)
title('Invisble watermarked Image');
imwrite(finalImage, 'watermarkedImage.png');

end